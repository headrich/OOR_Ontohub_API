package org.oor.persistence;


/**
* org/oor/persistence/RepositoryOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from src/Ontology.idl
* Dienstag, 30. Juli 2013 15:56 Uhr MESZ
*/

public interface RepositoryOperations 
{
  String getName (org.oor.persistence.Iri iri);
  void setName (org.oor.persistence.Iri iri, String name);
  void getOntologyIriList (org.oor.persistence.Iri iri, org.oor.persistence.IriListHolder ontologyIriList);
  void getOntologyFractumList (org.oor.persistence.Iri iri, org.oor.persistence.OntologyFractumListHolder ontologyFractumList);
  void getOntologyContentList (org.oor.persistence.Iri iri, org.oor.persistence.OntologyContentListHolder ontologyContentList);
  void getRepositoryFractum (org.oor.persistence.Iri iri, org.oor.persistence.RepositoryFractumHolder repositoryFractum);
  void getRepositoryContent (org.oor.persistence.Iri iri, org.oor.persistence.RepositoryContentHolder repositoryContent);
  void setOntologyIriList (org.oor.persistence.Iri iri, org.oor.persistence.Iri[] ontologyIriList);
  void addOntology (org.oor.persistence.Iri iri, org.oor.persistence.Iri ontologyIri);
  void delOntology (org.oor.persistence.Iri iri, org.oor.persistence.Iri ontologyIri);
  void setRepositoryFractum (org.oor.persistence.Iri iri, org.oor.persistence.RepositoryFractum repositoryFractum);
  void setRepositoryContent (org.oor.persistence.Iri iri, org.oor.persistence.RepositoryContent repositoryContent);
} // interface RepositoryOperations
