package org.oor.persistence;


/**
* org/oor/persistence/_RepositoryBaseStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from src/Ontology.idl
* Dienstag, 30. Juli 2013 15:56 Uhr MESZ
*/

public class _RepositoryBaseStub extends org.omg.CORBA.portable.ObjectImpl implements org.oor.persistence.RepositoryBase
{

  public void selectRepositoryIriList (String name, org.oor.persistence.IriListHolder iriList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("selectRepositoryIriList", true);
                org.oor.persistence.TextHelper.write ($out, name);
                $in = _invoke ($out);
                iriList.value = org.oor.persistence.IriListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                selectRepositoryIriList (name, iriList        );
            } finally {
                _releaseReply ($in);
            }
  } // selectRepositoryIriList

  public void selectRepositoryFractumList (String name, org.oor.persistence.RepositoryFractumListHolder repositoryFractumList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("selectRepositoryFractumList", true);
                org.oor.persistence.TextHelper.write ($out, name);
                $in = _invoke ($out);
                repositoryFractumList.value = org.oor.persistence.RepositoryFractumListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                selectRepositoryFractumList (name, repositoryFractumList        );
            } finally {
                _releaseReply ($in);
            }
  } // selectRepositoryFractumList

  public void selectRepositoryContentList (String name, org.oor.persistence.RepositoryContentListHolder repositoryContentList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("selectRepositoryContentList", true);
                org.oor.persistence.TextHelper.write ($out, name);
                $in = _invoke ($out);
                repositoryContentList.value = org.oor.persistence.RepositoryContentListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                selectRepositoryContentList (name, repositoryContentList        );
            } finally {
                _releaseReply ($in);
            }
  } // selectRepositoryContentList

  public void insertRepository (org.oor.persistence.RepositoryContent repositoryContent, org.oor.persistence.IriHolder iri)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("insertRepository", true);
                org.oor.persistence.RepositoryContentHelper.write ($out, repositoryContent);
                $in = _invoke ($out);
                iri.value = org.oor.persistence.IriHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                insertRepository (repositoryContent, iri        );
            } finally {
                _releaseReply ($in);
            }
  } // insertRepository

  public void updateRepository (org.oor.persistence.RepositoryContent repositoryContent)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("updateRepository", true);
                org.oor.persistence.RepositoryContentHelper.write ($out, repositoryContent);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                updateRepository (repositoryContent        );
            } finally {
                _releaseReply ($in);
            }
  } // updateRepository

  public void removeRepository (org.oor.persistence.Iri iri)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("removeRepository", true);
                org.oor.persistence.IriHelper.write ($out, iri);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                removeRepository (iri        );
            } finally {
                _releaseReply ($in);
            }
  } // removeRepository

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:org/oor/persistence/RepositoryBase:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _RepositoryBaseStub
