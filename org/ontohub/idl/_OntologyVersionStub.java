package org.ontohub.idl;


/**
* org/ontohub/idl/_OntologyVersionStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from src/Ontology.idl
* Dienstag, 30. Juli 2013 15:12 Uhr MESZ
*/

public class _OntologyVersionStub extends org.omg.CORBA.portable.ObjectImpl implements org.ontohub.idl.OntologyVersion
{

  public void getBlob (org.ontohub.idl.Iri iri)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getBlob", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                getBlob (iri        );
            } finally {
                _releaseReply ($in);
            }
  } // getBlob

  public void getSymbolList (org.ontohub.idl.Iri iri, org.ontohub.idl.SymbolListHolder symbolList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getSymbolList", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                $in = _invoke ($out);
                symbolList.value = org.ontohub.idl.SymbolListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                getSymbolList (iri, symbolList        );
            } finally {
                _releaseReply ($in);
            }
  } // getSymbolList

  public void getSentenceList (org.ontohub.idl.Iri iri, org.ontohub.idl.SentenceListHolder sentenceList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getSentenceList", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                $in = _invoke ($out);
                sentenceList.value = org.ontohub.idl.SentenceListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                getSentenceList (iri, sentenceList        );
            } finally {
                _releaseReply ($in);
            }
  } // getSentenceList

  public void getMetricsList (org.ontohub.idl.Iri iri, org.ontohub.idl.MetricsListHolder metricsList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getMetricsList", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                $in = _invoke ($out);
                metricsList.value = org.ontohub.idl.MetricsListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                getMetricsList (iri, metricsList        );
            } finally {
                _releaseReply ($in);
            }
  } // getMetricsList

  public void getNoteList (org.ontohub.idl.Iri iri, org.ontohub.idl.NoteListHolder noteList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getNoteList", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                $in = _invoke ($out);
                noteList.value = org.ontohub.idl.NoteListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                getNoteList (iri, noteList        );
            } finally {
                _releaseReply ($in);
            }
  } // getNoteList

  public void getMetadatumList (org.ontohub.idl.Iri iri, org.ontohub.idl.MetadatumListHolder metadatumList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getMetadatumList", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                $in = _invoke ($out);
                metadatumList.value = org.ontohub.idl.MetadatumListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                getMetadatumList (iri, metadatumList        );
            } finally {
                _releaseReply ($in);
            }
  } // getMetadatumList

  public void setSymbolList (org.ontohub.idl.Iri iri, org.ontohub.idl.Symbol[] symbolList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setSymbolList", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                org.ontohub.idl.SymbolListHelper.write ($out, symbolList);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                setSymbolList (iri, symbolList        );
            } finally {
                _releaseReply ($in);
            }
  } // setSymbolList

  public void addSymbol (org.ontohub.idl.Iri iri, org.ontohub.idl.Symbol symbol)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addSymbol", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                org.ontohub.idl.SymbolHelper.write ($out, symbol);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                addSymbol (iri, symbol        );
            } finally {
                _releaseReply ($in);
            }
  } // addSymbol

  public void delSymbol (org.ontohub.idl.Iri iri, org.ontohub.idl.Iri symbolIri)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("delSymbol", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                org.ontohub.idl.IriHelper.write ($out, symbolIri);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                delSymbol (iri, symbolIri        );
            } finally {
                _releaseReply ($in);
            }
  } // delSymbol

  public void setSentenceList (org.ontohub.idl.Iri iri, org.ontohub.idl.Sentence[] sentenceList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setSentenceList", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                org.ontohub.idl.SentenceListHelper.write ($out, sentenceList);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                setSentenceList (iri, sentenceList        );
            } finally {
                _releaseReply ($in);
            }
  } // setSentenceList

  public void addSentence (org.ontohub.idl.Iri iri, org.ontohub.idl.Sentence sentence)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addSentence", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                org.ontohub.idl.SentenceHelper.write ($out, sentence);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                addSentence (iri, sentence        );
            } finally {
                _releaseReply ($in);
            }
  } // addSentence

  public void delSentence (org.ontohub.idl.Iri iri, org.ontohub.idl.Iri sentenceIri)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("delSentence", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                org.ontohub.idl.IriHelper.write ($out, sentenceIri);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                delSentence (iri, sentenceIri        );
            } finally {
                _releaseReply ($in);
            }
  } // delSentence

  public void setMetricsList (org.ontohub.idl.Iri iri, org.ontohub.idl.Metrics[] metricsList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setMetricsList", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                org.ontohub.idl.MetricsListHelper.write ($out, metricsList);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                setMetricsList (iri, metricsList        );
            } finally {
                _releaseReply ($in);
            }
  } // setMetricsList

  public void addMetrics (org.ontohub.idl.Iri iri, org.ontohub.idl.Metrics metrics)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addMetrics", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                org.ontohub.idl.MetricsHelper.write ($out, metrics);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                addMetrics (iri, metrics        );
            } finally {
                _releaseReply ($in);
            }
  } // addMetrics

  public void delMetrics (org.ontohub.idl.Iri iri, org.ontohub.idl.Iri metricsIri)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("delMetrics", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                org.ontohub.idl.IriHelper.write ($out, metricsIri);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                delMetrics (iri, metricsIri        );
            } finally {
                _releaseReply ($in);
            }
  } // delMetrics

  public void setNoteList (org.ontohub.idl.Iri iri, org.ontohub.idl.Note[] noteList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setNoteList", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                org.ontohub.idl.NoteListHelper.write ($out, noteList);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                setNoteList (iri, noteList        );
            } finally {
                _releaseReply ($in);
            }
  } // setNoteList

  public void addNote (org.ontohub.idl.Iri iri, org.ontohub.idl.Note note)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addNote", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                org.ontohub.idl.NoteHelper.write ($out, note);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                addNote (iri, note        );
            } finally {
                _releaseReply ($in);
            }
  } // addNote

  public void delNote (org.ontohub.idl.Iri iri, org.ontohub.idl.Iri noteIri)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("delNote", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                org.ontohub.idl.IriHelper.write ($out, noteIri);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                delNote (iri, noteIri        );
            } finally {
                _releaseReply ($in);
            }
  } // delNote

  public void setMetadatumList (org.ontohub.idl.Iri iri, org.ontohub.idl.Metadatum[] metadatumList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setMetadatumList", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                org.ontohub.idl.MetadatumListHelper.write ($out, metadatumList);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                setMetadatumList (iri, metadatumList        );
            } finally {
                _releaseReply ($in);
            }
  } // setMetadatumList

  public void addMetadatum (org.ontohub.idl.Iri iri, org.ontohub.idl.Metadatum metadatum)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addMetadatum", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                org.ontohub.idl.MetadatumHelper.write ($out, metadatum);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                addMetadatum (iri, metadatum        );
            } finally {
                _releaseReply ($in);
            }
  } // addMetadatum

  public void delMetadatum (org.ontohub.idl.Iri iri, org.ontohub.idl.Iri metadatumIri)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("delMetadatum", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                org.ontohub.idl.IriHelper.write ($out, metadatumIri);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                delMetadatum (iri, metadatumIri        );
            } finally {
                _releaseReply ($in);
            }
  } // delMetadatum

  public void getContent (org.ontohub.idl.Iri iri, org.ontohub.idl.OntologyVersionContentHolder content)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getContent", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                $in = _invoke ($out);
                content.value = org.ontohub.idl.OntologyVersionContentHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                getContent (iri, content        );
            } finally {
                _releaseReply ($in);
            }
  } // getContent

  public void setContent (org.ontohub.idl.Iri iri, org.ontohub.idl.OntologyVersionContent content)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setContent", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                org.ontohub.idl.OntologyVersionContentHelper.write ($out, content);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                setContent (iri, content        );
            } finally {
                _releaseReply ($in);
            }
  } // setContent

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:org/ontohub/idl/OntologyVersion:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _OntologyVersionStub
