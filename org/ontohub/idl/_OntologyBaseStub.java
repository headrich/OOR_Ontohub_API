package org.ontohub.idl;


/**
* org/ontohub/idl/_OntologyBaseStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from src/Ontology.idl
* Dienstag, 30. Juli 2013 15:12 Uhr MESZ
*/

public class _OntologyBaseStub extends org.omg.CORBA.portable.ObjectImpl implements org.ontohub.idl.OntologyBase
{

  public void selectOntologyIriList (String name, String category, String group, org.ontohub.idl.Iri languageIri, org.ontohub.idl.Iri projectIri, org.ontohub.idl.IriListHolder iriList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("selectOntologyIriList", true);
                org.ontohub.idl.TextHelper.write ($out, name);
                org.ontohub.idl.TextHelper.write ($out, category);
                org.ontohub.idl.TextHelper.write ($out, group);
                org.ontohub.idl.IriHelper.write ($out, languageIri);
                org.ontohub.idl.IriHelper.write ($out, projectIri);
                $in = _invoke ($out);
                iriList.value = org.ontohub.idl.IriListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                selectOntologyIriList (name, category, group, languageIri, projectIri, iriList        );
            } finally {
                _releaseReply ($in);
            }
  } // selectOntologyIriList

  public void selectOntologyIriListByName (String name, org.ontohub.idl.IriListHolder iriList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("selectOntologyIriListByName", true);
                org.ontohub.idl.TextHelper.write ($out, name);
                $in = _invoke ($out);
                iriList.value = org.ontohub.idl.IriListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                selectOntologyIriListByName (name, iriList        );
            } finally {
                _releaseReply ($in);
            }
  } // selectOntologyIriListByName

  public void selectOntologyIriListByCategory (String category, org.ontohub.idl.IriListHolder iriList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("selectOntologyIriListByCategory", true);
                org.ontohub.idl.TextHelper.write ($out, category);
                $in = _invoke ($out);
                iriList.value = org.ontohub.idl.IriListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                selectOntologyIriListByCategory (category, iriList        );
            } finally {
                _releaseReply ($in);
            }
  } // selectOntologyIriListByCategory

  public void selectOntologyIriListByGroup (String group, org.ontohub.idl.IriListHolder iriList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("selectOntologyIriListByGroup", true);
                org.ontohub.idl.TextHelper.write ($out, group);
                $in = _invoke ($out);
                iriList.value = org.ontohub.idl.IriListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                selectOntologyIriListByGroup (group, iriList        );
            } finally {
                _releaseReply ($in);
            }
  } // selectOntologyIriListByGroup

  public void selectOntologyIriListByLanguageIri (org.ontohub.idl.Iri languageIri, org.ontohub.idl.IriListHolder iriList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("selectOntologyIriListByLanguageIri", true);
                org.ontohub.idl.IriHelper.write ($out, languageIri);
                $in = _invoke ($out);
                iriList.value = org.ontohub.idl.IriListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                selectOntologyIriListByLanguageIri (languageIri, iriList        );
            } finally {
                _releaseReply ($in);
            }
  } // selectOntologyIriListByLanguageIri

  public void selectOntologyIriListByProjectIri (org.ontohub.idl.Iri projectIri, org.ontohub.idl.IriListHolder iriList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("selectOntologyIriListByProjectIri", true);
                org.ontohub.idl.IriHelper.write ($out, projectIri);
                $in = _invoke ($out);
                iriList.value = org.ontohub.idl.IriListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                selectOntologyIriListByProjectIri (projectIri, iriList        );
            } finally {
                _releaseReply ($in);
            }
  } // selectOntologyIriListByProjectIri

  public void getOntologyIriList ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getOntologyIriList", true);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                getOntologyIriList (        );
            } finally {
                _releaseReply ($in);
            }
  } // getOntologyIriList

  public void selectOntologyFractumList (String name, String category, String group, org.ontohub.idl.Iri languageIri, org.ontohub.idl.Iri projectIri, org.ontohub.idl.OntologyFractumListHolder fractumList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("selectOntologyFractumList", true);
                org.ontohub.idl.TextHelper.write ($out, name);
                org.ontohub.idl.TextHelper.write ($out, category);
                org.ontohub.idl.TextHelper.write ($out, group);
                org.ontohub.idl.IriHelper.write ($out, languageIri);
                org.ontohub.idl.IriHelper.write ($out, projectIri);
                $in = _invoke ($out);
                fractumList.value = org.ontohub.idl.OntologyFractumListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                selectOntologyFractumList (name, category, group, languageIri, projectIri, fractumList        );
            } finally {
                _releaseReply ($in);
            }
  } // selectOntologyFractumList

  public void selectOntologyFractumListByName (String name, org.ontohub.idl.OntologyFractumListHolder fractumList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("selectOntologyFractumListByName", true);
                org.ontohub.idl.TextHelper.write ($out, name);
                $in = _invoke ($out);
                fractumList.value = org.ontohub.idl.OntologyFractumListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                selectOntologyFractumListByName (name, fractumList        );
            } finally {
                _releaseReply ($in);
            }
  } // selectOntologyFractumListByName

  public void selectOntologyFractumListByCategory (String category, org.ontohub.idl.OntologyFractumListHolder fractumList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("selectOntologyFractumListByCategory", true);
                org.ontohub.idl.TextHelper.write ($out, category);
                $in = _invoke ($out);
                fractumList.value = org.ontohub.idl.OntologyFractumListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                selectOntologyFractumListByCategory (category, fractumList        );
            } finally {
                _releaseReply ($in);
            }
  } // selectOntologyFractumListByCategory

  public void selectOntologyFractumListByGroup (String group, org.ontohub.idl.OntologyFractumListHolder fractumList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("selectOntologyFractumListByGroup", true);
                org.ontohub.idl.TextHelper.write ($out, group);
                $in = _invoke ($out);
                fractumList.value = org.ontohub.idl.OntologyFractumListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                selectOntologyFractumListByGroup (group, fractumList        );
            } finally {
                _releaseReply ($in);
            }
  } // selectOntologyFractumListByGroup

  public void selectOntologyFracutmListByLanguageIri (org.ontohub.idl.Iri languageIri, org.ontohub.idl.OntologyFractumListHolder fractumList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("selectOntologyFracutmListByLanguageIri", true);
                org.ontohub.idl.IriHelper.write ($out, languageIri);
                $in = _invoke ($out);
                fractumList.value = org.ontohub.idl.OntologyFractumListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                selectOntologyFracutmListByLanguageIri (languageIri, fractumList        );
            } finally {
                _releaseReply ($in);
            }
  } // selectOntologyFracutmListByLanguageIri

  public void selectOntologyFractumListByProjectIri (org.ontohub.idl.Iri projectIri, org.ontohub.idl.OntologyFractumListHolder fractumList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("selectOntologyFractumListByProjectIri", true);
                org.ontohub.idl.IriHelper.write ($out, projectIri);
                $in = _invoke ($out);
                fractumList.value = org.ontohub.idl.OntologyFractumListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                selectOntologyFractumListByProjectIri (projectIri, fractumList        );
            } finally {
                _releaseReply ($in);
            }
  } // selectOntologyFractumListByProjectIri

  public void getOntologyFractumList ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getOntologyFractumList", true);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                getOntologyFractumList (        );
            } finally {
                _releaseReply ($in);
            }
  } // getOntologyFractumList

  public void selectOntologyContentList (String name, String category, String group, org.ontohub.idl.Iri languageIri, org.ontohub.idl.Iri projectIri, org.ontohub.idl.OntologyContentListHolder contentList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("selectOntologyContentList", true);
                org.ontohub.idl.TextHelper.write ($out, name);
                org.ontohub.idl.TextHelper.write ($out, category);
                org.ontohub.idl.TextHelper.write ($out, group);
                org.ontohub.idl.IriHelper.write ($out, languageIri);
                org.ontohub.idl.IriHelper.write ($out, projectIri);
                $in = _invoke ($out);
                contentList.value = org.ontohub.idl.OntologyContentListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                selectOntologyContentList (name, category, group, languageIri, projectIri, contentList        );
            } finally {
                _releaseReply ($in);
            }
  } // selectOntologyContentList

  public void selectOntologyContentListByName (String name, org.ontohub.idl.OntologyContentListHolder contentList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("selectOntologyContentListByName", true);
                org.ontohub.idl.TextHelper.write ($out, name);
                $in = _invoke ($out);
                contentList.value = org.ontohub.idl.OntologyContentListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                selectOntologyContentListByName (name, contentList        );
            } finally {
                _releaseReply ($in);
            }
  } // selectOntologyContentListByName

  public void selectOntologyContentListByCategory (String category, org.ontohub.idl.OntologyContentListHolder contentList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("selectOntologyContentListByCategory", true);
                org.ontohub.idl.TextHelper.write ($out, category);
                $in = _invoke ($out);
                contentList.value = org.ontohub.idl.OntologyContentListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                selectOntologyContentListByCategory (category, contentList        );
            } finally {
                _releaseReply ($in);
            }
  } // selectOntologyContentListByCategory

  public void selectOntologyContentListByGroup (String group, org.ontohub.idl.OntologyContentListHolder contentList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("selectOntologyContentListByGroup", true);
                org.ontohub.idl.TextHelper.write ($out, group);
                $in = _invoke ($out);
                contentList.value = org.ontohub.idl.OntologyContentListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                selectOntologyContentListByGroup (group, contentList        );
            } finally {
                _releaseReply ($in);
            }
  } // selectOntologyContentListByGroup

  public void selectOntologyContentListByLanguageIri (org.ontohub.idl.Iri languageIri, org.ontohub.idl.OntologyContentListHolder contentList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("selectOntologyContentListByLanguageIri", true);
                org.ontohub.idl.IriHelper.write ($out, languageIri);
                $in = _invoke ($out);
                contentList.value = org.ontohub.idl.OntologyContentListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                selectOntologyContentListByLanguageIri (languageIri, contentList        );
            } finally {
                _releaseReply ($in);
            }
  } // selectOntologyContentListByLanguageIri

  public void selectOntologyContentListByProjectIri (org.ontohub.idl.Iri projectIri, org.ontohub.idl.OntologyContentListHolder contentList)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("selectOntologyContentListByProjectIri", true);
                org.ontohub.idl.IriHelper.write ($out, projectIri);
                $in = _invoke ($out);
                contentList.value = org.ontohub.idl.OntologyContentListHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                selectOntologyContentListByProjectIri (projectIri, contentList        );
            } finally {
                _releaseReply ($in);
            }
  } // selectOntologyContentListByProjectIri

  public void getOntologyContentList ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getOntologyContentList", true);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                getOntologyContentList (        );
            } finally {
                _releaseReply ($in);
            }
  } // getOntologyContentList

  public void insertOntology (org.ontohub.idl.OntologyContent ontologyContent, org.ontohub.idl.IriHolder iri)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("insertOntology", true);
                org.ontohub.idl.OntologyContentHelper.write ($out, ontologyContent);
                $in = _invoke ($out);
                iri.value = org.ontohub.idl.IriHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                insertOntology (ontologyContent, iri        );
            } finally {
                _releaseReply ($in);
            }
  } // insertOntology

  public void updateOntology (org.ontohub.idl.OntologyContent ontologyContent)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("updateOntology", true);
                org.ontohub.idl.OntologyContentHelper.write ($out, ontologyContent);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                updateOntology (ontologyContent        );
            } finally {
                _releaseReply ($in);
            }
  } // updateOntology

  public void removeOntology (org.ontohub.idl.Iri iri)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("removeOntology", true);
                org.ontohub.idl.IriHelper.write ($out, iri);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                removeOntology (iri        );
            } finally {
                _releaseReply ($in);
            }
  } // removeOntology

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:org/ontohub/idl/OntologyBase:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _OntologyBaseStub
